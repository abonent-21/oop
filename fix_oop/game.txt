3
10 10
0 0 0 0 0 0 1 0 0 1 
0 2 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 
0 0 0 2 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 
0
2
1 0
0 

1
1 1 0
1 1
0 

1
3 3 0


10 10
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 2 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 2 0 0 0 0 0 
0
2
1 1
0 

1
4 6 0
1 0
0 

1
9 4 0


7
2
1
0
0
0
1
0

    bool luckyStrike = rand() % 4;
    if (luckyStrike == 0 && !gameState_.getPlayerField().allShipsDestroyed()) {
        do {
            x = rand() % 10;
            y = rand() % 10;
        } while(gameState_.getPlayerField().wasCellAttacked(x,y));
    } else {
        x = rand() % 10;
        y = rand() % 10;
    }


    std::cout<<"New Round is started"<<std::endl;
    int roundNumber = gameState_.getRoundNumber();
    gameState_.setRoundNumber(roundNumber + 1);
    std::cout<<"New"



        do {
        x = rand() % 10;
        y = rand() % 10;
    } while (gameState_.getPlayerField().wasCellAttacked(x, y));